{"ast":null,"code":"import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n  constructor(reason, description, context) {\n    super(reason);\n    this.description = description;\n    this.context = context;\n    this.type = \"TransportError\";\n  }\n\n}\nexport class Transport extends Emitter {\n  /**\r\n   * Transport abstract constructor.\r\n   *\r\n   * @param {Object} opts - options\r\n   * @protected\r\n   */\n  constructor(opts) {\n    super();\n    this.writable = false;\n    installTimerFunctions(this, opts);\n    this.opts = opts;\n    this.query = opts.query;\n    this.socket = opts.socket;\n  }\n  /**\r\n   * Emits an error.\r\n   *\r\n   * @param {String} reason\r\n   * @param description\r\n   * @param context - the error context\r\n   * @return {Transport} for chaining\r\n   * @protected\r\n   */\n\n\n  onError(reason, description, context) {\n    super.emitReserved(\"error\", new TransportError(reason, description, context));\n    return this;\n  }\n  /**\r\n   * Opens the transport.\r\n   */\n\n\n  open() {\n    this.readyState = \"opening\";\n    this.doOpen();\n    return this;\n  }\n  /**\r\n   * Closes the transport.\r\n   */\n\n\n  close() {\n    if (this.readyState === \"opening\" || this.readyState === \"open\") {\n      this.doClose();\n      this.onClose();\n    }\n\n    return this;\n  }\n  /**\r\n   * Sends multiple packets.\r\n   *\r\n   * @param {Array} packets\r\n   */\n\n\n  send(packets) {\n    if (this.readyState === \"open\") {\n      this.write(packets);\n    } else {// this might happen if the transport was silently closed in the beforeunload event handler\n    }\n  }\n  /**\r\n   * Called upon open\r\n   *\r\n   * @protected\r\n   */\n\n\n  onOpen() {\n    this.readyState = \"open\";\n    this.writable = true;\n    super.emitReserved(\"open\");\n  }\n  /**\r\n   * Called with data.\r\n   *\r\n   * @param {String} data\r\n   * @protected\r\n   */\n\n\n  onData(data) {\n    const packet = decodePacket(data, this.socket.binaryType);\n    this.onPacket(packet);\n  }\n  /**\r\n   * Called with a decoded packet.\r\n   *\r\n   * @protected\r\n   */\n\n\n  onPacket(packet) {\n    super.emitReserved(\"packet\", packet);\n  }\n  /**\r\n   * Called upon close.\r\n   *\r\n   * @protected\r\n   */\n\n\n  onClose(details) {\n    this.readyState = \"closed\";\n    super.emitReserved(\"close\", details);\n  }\n  /**\r\n   * Pauses the transport, in order not to lose packets during an upgrade.\r\n   *\r\n   * @param onPause\r\n   */\n\n\n  pause(onPause) {}\n\n  createUri(schema, query = {}) {\n    return schema + \"://\" + this._hostname() + this._port() + this.opts.path + this._query(query);\n  }\n\n  _hostname() {\n    const hostname = this.opts.hostname;\n    return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n  }\n\n  _port() {\n    if (this.opts.port && (this.opts.secure && Number(this.opts.port !== 443) || !this.opts.secure && Number(this.opts.port) !== 80)) {\n      return \":\" + this.opts.port;\n    } else {\n      return \"\";\n    }\n  }\n\n  _query(query) {\n    const encodedQuery = encode(query);\n    return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Nathan/Documents/CSULB stuff/cecs327/Networking-class/JS PRACTICE/client/node_modules/engine.io-client/build/esm/transport.js"],"names":["decodePacket","Emitter","installTimerFunctions","encode","TransportError","Error","constructor","reason","description","context","type","Transport","opts","writable","query","socket","onError","emitReserved","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","data","packet","binaryType","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","length"],"mappings":"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","sourcesContent":["import { decodePacket } from \"engine.io-parser\";\r\nimport { Emitter } from \"@socket.io/component-emitter\";\r\nimport { installTimerFunctions } from \"./util.js\";\r\nimport { encode } from \"./contrib/parseqs.js\";\r\nexport class TransportError extends Error {\r\n    constructor(reason, description, context) {\r\n        super(reason);\r\n        this.description = description;\r\n        this.context = context;\r\n        this.type = \"TransportError\";\r\n    }\r\n}\r\nexport class Transport extends Emitter {\r\n    /**\r\n     * Transport abstract constructor.\r\n     *\r\n     * @param {Object} opts - options\r\n     * @protected\r\n     */\r\n    constructor(opts) {\r\n        super();\r\n        this.writable = false;\r\n        installTimerFunctions(this, opts);\r\n        this.opts = opts;\r\n        this.query = opts.query;\r\n        this.socket = opts.socket;\r\n    }\r\n    /**\r\n     * Emits an error.\r\n     *\r\n     * @param {String} reason\r\n     * @param description\r\n     * @param context - the error context\r\n     * @return {Transport} for chaining\r\n     * @protected\r\n     */\r\n    onError(reason, description, context) {\r\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\r\n        return this;\r\n    }\r\n    /**\r\n     * Opens the transport.\r\n     */\r\n    open() {\r\n        this.readyState = \"opening\";\r\n        this.doOpen();\r\n        return this;\r\n    }\r\n    /**\r\n     * Closes the transport.\r\n     */\r\n    close() {\r\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\r\n            this.doClose();\r\n            this.onClose();\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Sends multiple packets.\r\n     *\r\n     * @param {Array} packets\r\n     */\r\n    send(packets) {\r\n        if (this.readyState === \"open\") {\r\n            this.write(packets);\r\n        }\r\n        else {\r\n            // this might happen if the transport was silently closed in the beforeunload event handler\r\n        }\r\n    }\r\n    /**\r\n     * Called upon open\r\n     *\r\n     * @protected\r\n     */\r\n    onOpen() {\r\n        this.readyState = \"open\";\r\n        this.writable = true;\r\n        super.emitReserved(\"open\");\r\n    }\r\n    /**\r\n     * Called with data.\r\n     *\r\n     * @param {String} data\r\n     * @protected\r\n     */\r\n    onData(data) {\r\n        const packet = decodePacket(data, this.socket.binaryType);\r\n        this.onPacket(packet);\r\n    }\r\n    /**\r\n     * Called with a decoded packet.\r\n     *\r\n     * @protected\r\n     */\r\n    onPacket(packet) {\r\n        super.emitReserved(\"packet\", packet);\r\n    }\r\n    /**\r\n     * Called upon close.\r\n     *\r\n     * @protected\r\n     */\r\n    onClose(details) {\r\n        this.readyState = \"closed\";\r\n        super.emitReserved(\"close\", details);\r\n    }\r\n    /**\r\n     * Pauses the transport, in order not to lose packets during an upgrade.\r\n     *\r\n     * @param onPause\r\n     */\r\n    pause(onPause) { }\r\n    createUri(schema, query = {}) {\r\n        return (schema +\r\n            \"://\" +\r\n            this._hostname() +\r\n            this._port() +\r\n            this.opts.path +\r\n            this._query(query));\r\n    }\r\n    _hostname() {\r\n        const hostname = this.opts.hostname;\r\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\r\n    }\r\n    _port() {\r\n        if (this.opts.port &&\r\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\r\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\r\n            return \":\" + this.opts.port;\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    }\r\n    _query(query) {\r\n        const encodedQuery = encode(query);\r\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}